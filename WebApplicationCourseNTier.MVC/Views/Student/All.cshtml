@model WebApplicationCourseNTier.MVC.Models.PaginationViewModel<WebApplicationCourseNTier.Business.DTOs.StudentDTOs.GetStudentDto>

<h1 class="my-4 text-center text-dark font-weight-bold">All Students</h1>

<div class="d-flex justify-content-start mb-4">
    <a href="@Url.Action("Create", "Student")" class="btn btn-primary btn-lg text-dark font-weight-bold">
        <i class="fas fa-plus-circle"></i> Create New Student
    </a>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered table-hover shadow-sm rounded">
        <thead class="thead-dark">
            <tr>
                <th class="text-center text-dark">ID</th>
                <th class="text-center text-dark">Name</th>
                <th class="text-center text-dark">Registration Date</th>
                <th class="text-center text-dark">Groups</th>
                <th class="text-center text-dark">Lessons</th>
                <th class="text-center text-dark">Photo</th>
                <th class="text-center text-dark">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in Model.Values)
            {
                <tr>
                    <td class="text-center bg-info text-white">@student.Id</td>
                    <td class="text-center bg-light text-dark">@student.Name</td>
                    <td class="text-center bg-light text-dark">@student.RegistrationDate.ToString("dd/MM/yyyy")</td>
                    <td class="text-center bg-light text-dark">
                        @foreach (var groupName in student.GroupNames)
                        {
                            <span class="badge badge-pill badge-info text-dark mr-1">@groupName</span>
                        }
                    </td>
                    <td class="text-center bg-light text-dark">
                        @foreach (var lessonName in student.LessonNames)
                        {
                            <span class="badge badge-pill badge-success text-dark mr-1">@lessonName</span>
                        }
                    </td>
                    <td class="text-center bg-light text-dark">
                        @if (student.FileDetails != null && student.FileDetails.Any())
                        {
                            var fileDetail = student.FileDetails.FirstOrDefault(); 
                            if (fileDetail != null && fileDetail.Data != null)
                            {
                                var extension = fileDetail.Extension.Split('.').Last().ToLower();
                                var base64 = Convert.ToBase64String(fileDetail.Data);
                                var imgSrc = $"data:image/{extension};base64,{base64}";

                                <img src="@imgSrc" width="50" height="50" class="rounded-circle" />
                            }
                            else
                            {
                                <span>No Photo</span>
                            }
                        }
                        else
                        {
                            <span>No Photo</span>
                        }
                    </td>
                    <td class="text-center bg-light text-dark">
                        <a href="@Url.Action("Edit", "Student", new { id = student.Id })" class="btn btn-warning btn-sm">Edit</a>
                        <a href="@Url.Action("Delete", "Student", new { id = student.Id })" onclick="return confirm('Are you sure?')" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
        @await Html.PartialAsync("_pagination")
    </table>
</div>
